<%

/*
 * Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
 *
 * WSO2 Inc. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

include("util/constants.jag");
var log = new Log();
var multitenantUtils = Packages.org.wso2.carbon.utils.multitenancy.MultitenantUtils;

var cookie = request.getParameter("cookie");

var userStoreDomain = "PRIMARY";

var username = request.getParameter("user");
if(username != null) {
  session.put('user', username);
} else {
  username = session.get('user');
}

var tenantDomain = multitenantUtils.getTenantDomain(username);

// Remove tenant domain from the username.
username = multitenantUtils.getTenantAwareUsername(username);

// Extract the user store domain from the username, if there is one.
var usernameTokens = username.split('/');
if(usernameTokens.length > 1){
  userStoreDomain = usernameTokens[0];
  username = usernameTokens[1];
}

fetchData();
function fetchData(){

  if(cookie != null) {
    session.put('auth-cookie', cookie);
  }

  var tableRows = new Array();
  var sessionMgtAdminClient = require('controllers/sessionMgtAdminClient.jag');
  var userSession = sessionMgtAdminClient.viewUserSession(username,tenantDomain,userStoreDomain);

  if(userSession !== null){
    if (userSession != null && userSession.length > 0) {
      k=0;
      for (i = 0; i < userSession.length; i++) {
        if(userSession[i] != null){
          for (j = 0; j < userSession[i].applications.length; j++) {
            if(userSession[i].applications[j] != null){
              var obj = {};
              obj.app = userSession[i].applications[j].appName;
              obj.userAgent = userSession[i].userAgent;
              obj.ip=userSession[i].ip;
              obj.loginTime = new Date(+userSession[i].loginTime).toString("MMM dd");
              obj.lastAccessTime = new Date(+userSession[i].lastAccessTime).toString("MMM dd");
              obj.sessionId = userSession[i].sessionId;
              tableRows[k] = obj;
              k++;
            }
          }
        }
      }
    }
  }

print(tableRows);
}

%>
